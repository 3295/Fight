<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.first.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="modifed_time" jdbcType="TIMESTAMP" property="modifedTime" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_sex" jdbcType="INTEGER" property="userSex" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created_time, modifed_time, user_name, user_sex
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.example.demo.entity.User">
    insert into user (created_time, modifed_time,
      user_name, user_sex)
    values (now(),now(),#{userName}, #{userSex})
  </insert>


  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">
    update user
    set created_time = #{createdTime,jdbcType=TIMESTAMP},
      modifed_time = #{modifedTime,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>